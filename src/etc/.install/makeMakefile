#!/bin/sh

# $Id$

# IMPORTANT: Make is picky about tab stops. Every continuation line in a
#            rule must start with a tab stop.

#############################################################################
#
# Preprocessing
#
#############################################################################

if_test () {
# $1: First operand
# $2: Operator
# $3: Second operand

	op1=$1; operator=$2; op2=$3;

	if test "$XITE_HOSTTYPE" != "NT4"; then
		echo "	     -@if test $op1 $operator $op2; then \\"
	else
		if test "$operator" = "="; then
			operator="NEQ"
		else
			operator="EQU"
		fi
		echo "	     -@IF $op1 $operator $op2 goto EOF"
	fi
}

end_if () {
	if test "$XITE_HOSTTYPE" != "NT4"; then
		echo "	     fi"
	fi
}

unix_only () {
	if [ "$XITE_HOSTTYPE" != "NT4" ]; then
		echo "	     $*"
	fi
}

ar_cmd () {
# $1: Library file
# $2: Object files (in the form of a "make" macro)

	if [ "$XITE_HOSTTYPE" != "NT4" ]; then
		echo "	       echo \"\$(AR) \$(AR_A_OPT) $1 $2\"${CMD_SEP} \\"
		echo "	       \$(AR) \$(AR_A_OPT) $1 $2${CMD_SEP} \\"
	else
		echo "	     @IF EXIST $1 \\"
		echo "	       echo \"\$(AR) \$(AR_A_OPT) $1 $2\"${CMD_SEP} \\"
		echo "	       \$(AR) \$(AR_A_OPT) $1 $2"
		echo "	     @IF NOT EXIST $1 \\"
		echo "	       echo \"\$(AR) \$(AR_A_OPT) /OUT:$1 $2\"${CMD_SEP} \\"
		echo "	       \$(AR) \$(AR_A_OPT) /OUT:$1 $2"
	fi
}

cd_lib_and_clean () {
	echo "	       -cd \$(XITE_LIB_DEST)${CMD_SEP} \\"
	echo "	       \$(RM_F) *.${OBJ_EXT} obj-files${CMD_SEP} \\"
}

lib_list () {
	echo "	       \$(AR) \$(AR_T_OPT) \$(?) | \\"
	echo "	       \$(GREP_V) \"SYMDEF\" > obj-files${CMD_SEP} \\"
}

lib_extract_f () {
# $1: Library file
	if [ "$XITE_HOSTTYPE" != "NT4" ]; then
		echo "	       \$(AR) \$(AR_X_OPT) $1${CMD_SEP} \\"
	else
		echo "	       ${lib_extract} $1${CMD_SEP} \\"
	fi
}

install_dso () {
# $1: Complete dso name, including version spec
# $2: Short dso name
	if [ "$XITE_HOSTTYPE" != "NT4" ]; then
		echo "	       -\$(LINK_F) \$(XITE_LIB_DEST)${DIR_SEP}$1 \\"
		echo "	         \$(XITE_LIB_DEST)${DIR_SEP}$2 ${TO_DEV_NULL}"
	else
		echo "	       -\$(LINK_F) \$(XITE_LIB_DEST)${DIR_SEP}$1 \\"
		echo "	         \$(XITE_BIN_DEST)${DIR_SEP}$2 ${TO_DEV_NULL}"
	fi
}

cmd_and_echo () {
# $1: cmd
	if [ "$XITE_HOSTTYPE" != "NT4" ]; then
		echo "	       echo \"$1\"${CMD_SEP} \\"
		echo "	       $1${CMD_SEP} \\"
	else
		echo "	       $1"
	fi
}

ld_basic_cmd () {
# $1: Library file
# $2: Object files

	if [ "$XITE_HOSTTYPE" = "NT4" ]; then
		echo "	       \$(LD) \$(DSO_NAME_FLAGS)$1 $2 \\"
	elif [ "$XITE_HOSTTYPE" != "SunOS" -a "$XITE_HOSTTYPE" != "AIX" ]; then
		echo "	       \$(LD) \$(DSO_NAME_FLAGS) $1 $2 \\"
		echo "	         -o $1 \\"
	else
		echo "	       \$(LD) -o $1 $2 \\"
	fi
}

dso_target () {
# $1: Label for dso target (not a real target)
# $2: Name of dso file (dependency of dso label) and final installed dso target
# $3: Directory for installation of $2
# $4: Name of dso file prior to final installation (output of linker)
# $5: Static library dependency file of dso target
# $6: Directory for $5
# $7: Extra arguments to the linker

  echo "$1: $3${DIR_SEP}$2"

  if [ "$XITE_HOSTTYPE" != "NT4" ]; then
    echo "$3${DIR_SEP}$2: $3${DIR_SEP}$4"
    install_dso "$4" "$2"
    echo ""
    echo "$3${DIR_SEP}$4: $6${DIR_SEP}$5"
    cd_lib_and_clean
    lib_list
    lib_extract_f "\$(?)"
    ld_basic_cmd "$4" "*.${OBJ_EXT}"
    echo "	             $7${CMD_SEP} \\"
    unix_only "	       \$(CHMOD) a+rx $3${DIR_SEP}$4 ${TO_DEV_NULL}"
  else
    echo "$3${DIR_SEP}$4: $6${DIR_SEP}$5"
    cd_lib_and_clean
    lib_list
    lib_extract_f "\$(?)"
    ld_basic_cmd "$4" "*.${OBJ_EXT}"
    echo "	             $7"
    install_dso "$4" "$2"
  fi
}

prog=`basename $0`

tmpHosttype=""; help=0
while test "$#" -gt 0
do
	case $1 in
	-p)
		if test $# -le 1; then
		  echo "Argument missing for option $1." 1>&2; help=1; break
		fi
		shift
		tmpHosttype="$1"
		;;
	-h|-help)
		help=1; break
		;;
	-x)
		if test $# -le 1; then
		  echo "Argument missing for option $1." 1>&2; help=1; break
		fi
		shift
		XITE_HOME=$1
		;;
	*)
		echo "Unknown argument $1." 1>&2;
		help=1; break
		;;
	esac
	shift
done

if test -z "$XITE_HOME"
then
  echo "$prog: XITE home directory is not known." 1>&2
  echo "Aborting $prog." 1>&2
  help=1
fi

if test "$help" -eq 1
then
	echo "usage: $prog [-x <XITE home-directory>] [-p <platform>] [-h(elp)]" 1>&2
	echo "       where default <platform> is the one you're using now" 1>&2
	echo "       and default XITE home-directory is given by the" 1>&2
	echo "       environment variable XITE_HOME." 1>&2
	exit 1
fi

utildir=$XITE_HOME/etc/.install
getPlatform=$utildir/getPlatform
lib_extract=$utildir/lib_extract.cmd

if test -z "$tmpHosttype" -a -n "$XITE_HOSTTYPE"
then
	tmpHosttype=$XITE_HOSTTYPE
fi

XITE_HOSTTYPE=`$getPlatform "$tmpHosttype" "$utildir" stderr`

#############################################################################
#
# Start to generate Makefile.
#
#############################################################################

echo "# Makefile for XITE software, $XITE_HOSTTYPE"

cat <<\EOF_START
#
######################################################################
# Customization:
#
# You may want to change the definitions of
#     1) CC
#     2) X_INC_DIR (Not for Windows)
#     3) X_LIB_DIR (Not for Windows)
#     4) XITE_BIN_DEST
#     5) XITE_LIB_DEST
#     6) XITE_INC_DEST
#     7) XITE_MAN_DEST
#     8) XITE_DOC_DEST
#     9) CFLAGS
#    10) LFLAGS
#    11) XLIB
#    12) MATLAB_INC
#    13) MATLAB_LIB
#    14) MATLAB_MEX_DEST
#    15) TIFF_INC_DIR
#    16) TIFF_LIB_DIR
#    17) PNM_INC_DIR
#    18) PNM_LIB_DIR
#    19) FWF_INC_DIR (Not for Windows)
#    20) FWF_LIB_DIR (Not for Windows)
#    21) XPM_INC_DIR (Not for Windows)
#    22) XPM_LIB_DIR (Not for Windows)
# to reflect your particular needs.
######################################################################

.SUFFIXES:
.SUFFIXES: .dummy

EOF_START

if    [ "$XITE_HOSTTYPE" = "IRIX"   -o \
	"$XITE_HOSTTYPE" = "IRIX64" -o \
	"$XITE_HOSTTYPE" = "OSF1" ]
then
	echo "RPATH_OPT       = -rpath"
	RPATH_OPT="yes"
elif [ "$XITE_HOSTTYPE" = "SunOS5" ]; then
	echo "RPATH_OPT       = -R"
	RPATH_OPT="yes"
elif [ "$XITE_HOSTTYPE" = "Linux" ]; then
	echo "RPATH_OPT       = -Xlinker -rpath -Xlinker"
	RPATH_OPT="yes"
elif [ "$XITE_HOSTTYPE" = "Debian" ]; then
	echo "RPATH_OPT       ="
	RPATH_OPT=""
else
	echo "RPATH_OPT       ="
	RPATH_OPT=""
fi

if [ "$XITE_HOSTTYPE" != "NT4" ]; then
	echo "SHELL           = /bin/sh"
	DIR_SEP="/"
	CMD_SEP="; "
	LIB_EXT="a"
	DSO_EXT=".so"
	OBJ_EXT="o"
	OBJ_LIB_EXT=""
	EXE_EXT=""
	OUT_OPT="-o "
	echo "LIB_TIFF        = -ltiff"
	echo "LIB_MATH        = -lm"
	echo "LIB_PNM         = -lpnm -lppm -lpgm -lpbm"
	echo "COPY            = cp"
	echo "LINK            = ln -s"
	echo "LINK_F          = ln -f -s"
	echo "CHMOD           = chmod"
	echo "RM              = rm"
	echo "RM_F            = \$(RM) -f"
	echo "GREP            = grep"
	echo "GREP_V          = \$(GREP) -v"

	EQU_STRING="="
	NEQ_STRING="!="
	TO_DEV_NULL="> /dev/null 2>&1"
else
	DIR_SEP="\\"
	CMD_SEP=" & "
	LIB_EXT="LIB"
	DSO_EXT=".dll"
	OBJ_EXT="obj"
	OBJ_LIB_EXT=":.o=.${OBJ_EXT}"
	EXE_EXT=".exe"
	OUT_OPT="-OUT:"
	echo "LIB_TIFF        = libtiff.lib"
	echo "LIB_MATH        = "
	echo "LIB_PNM         = libpnm.lib libppm.lib libpgm.lib libpbm.lib"
	echo "COPY            = copy"
	echo "LINK            = \$(COPY)"
	echo "LINK_F          = \$(LINK)"
	echo "CHMOD           = "
	echo "RM              = del"
	echo "RM_F            = \$(RM) /F"
	echo "GREP            = find"
	echo "GREP_V          = \$(GREP) /V"
	EQU_STRING="EQU"
	NEQ_STRING="NEQ"
	TO_DEV_NULL=""
fi # !NT4

echo "XITE_HOSTTYPE   = $XITE_HOSTTYPE"

#############################################################################
#
# CC, X_INC_DIR, X_LIB_DIR, XITE_BIN_DEST, XITE_LIB_DEST, XITE_MAN_DEST,
# XITE_DOC_DEST, DEBUG
#
#############################################################################

cat <<\EOF_CC

# 1) Set CC to the C compiler you want to use, typcially cc or gcc.
#
EOF_CC

if [ "$XITE_HOSTTYPE" != "NT4" ]; then
	echo "CC              = gcc"
else
	echo "CC              = cl"
fi

if [ "$XITE_HOSTTYPE" != "NT4" -a "$XITE_HOSTTYPE" != "Debian" ]; then

	cat <<\EOF_X

# 2) Set X_INC_DIR equal to the directory path for X11 include files.
#
X_INC_DIR       = /local/x11/include


# 3) Set X_LIB_DIR equal to the directory to search for X11 library files.
#
X_LIB_DIR       = /local/x11/lib

EOF_X

	if [ -n "$RPATH_OPT" ]; then
		echo "LFLAGS_X        = -L\$(X_LIB_DIR) \$(RPATH_OPT) \$(X_LIB_DIR)"
	else
		echo "LFLAGS_X        = -L\$(X_LIB_DIR)"
	fi
fi # !NT4 -a !Debian

echo "
# 4) Set XITE_BIN_DEST to determine where the XITE executables will
#    be placed
#
"

if [ "$XITE_HOSTTYPE" != "NT4" ]; then
	echo "#TOP            = ${DIR_SEP}local"
else
	echo "#TOP            = c:"
fi # !NT4

echo "TOP             = \$\$XITE_HOME"
if [ "$XITE_HOSTTYPE" = "Debian" ]; then
	echo "XITE_BIN_DEST   = \$\$DESTDIR${DIR_SEP}usr${DIR_SEP}bin"
else
	echo "#XITE_BIN_DEST   = ."
	echo "#XITE_BIN_DEST   = \$(TOP)${DIR_SEP}bin"
	echo "XITE_BIN_DEST   = \$(TOP)${DIR_SEP}bin${DIR_SEP}\$(XITE_HOSTTYPE)"
fi # Debian

echo "
# 5) Set XITE_LIB_DEST to determine where the XITE object library will be
#    placed
#"

if [ "$XITE_HOSTTYPE" = "Debian" ]; then
	echo "XITE_LIB_DEST   = \$\$DESTDIR${DIR_SEP}usr${DIR_SEP}lib"
	echo "XITE            = xite"
else
	echo "#XITE_LIB_DEST   = ."
	echo "#XITE_LIB_DEST   = \$(TOP)${DIR_SEP}lib"
	echo "XITE_LIB_DEST   = \$(TOP)${DIR_SEP}lib${DIR_SEP}\$(XITE_HOSTTYPE)"
	echo "XITE            = xite"
fi # Debian

if [ "$XITE_HOSTTYPE" != "NT4" ]; then
echo "XITE_LIB        = lib\$(XITE).${LIB_EXT}
XITE_MAJ        = .3
XITE_MIN        = .4"
else
echo "XITE_LIB        = lib\$(XITE)_static.${LIB_EXT}
XITE_MAJ        = 
XITE_MIN        = "
fi
echo "XITE_DSO        = lib\$(XITE)${DSO_EXT}
XITE_DSO_V      = \$(XITE_DSO)\$(XITE_MAJ)\$(XITE_MIN)
XITE_LIB_X      = lib\$(XITE)X.${LIB_EXT}"
if [ "$XITE_HOSTTYPE" != "NT4" ]; then
echo "XITE_X_MAJ      = .3
XITE_X_MIN      = .4"
else
echo "XITE_X_MAJ      = 
XITE_X_MIN      = "
fi

echo "XITE_X_DSO      = lib\$(XITE)X${DSO_EXT}
XITE_X_DSO_V    = \$(XITE_X_DSO)\$(XITE_X_MAJ)\$(XITE_X_MIN)"

if test "$XITE_HOSTTYPE" = "NT4"
then
	echo "LIB_XITE        = \$(XITE_LIB)"
	echo "LIB_XITE_IMP    = lib\$(XITE).${LIB_EXT}"
else
	echo "LIB_XITE        = -l\$(XITE)"
	echo "LIB_XITE_IMP    = \$(LIB_XITE)"
	echo "LIB_XITE_X      = -l\$(XITE)X"
	echo "LIB_XITE_X_IMP  = \$(LIB_XITE_X)"
fi

echo "
# 6) Set XITE_INC_DEST to determine where the XITE header files will be put
#"

if [ "$XITE_HOSTTYPE" = "Debian" ]; then
	echo "XITE_INC_DEST   = \$\$DESTDIR${DIR_SEP}usr${DIR_SEP}include"
else
	echo "#XITE_INC_DEST   = ."
	echo "XITE_INC_DEST   = \$(TOP)${DIR_SEP}include"
fi

echo "
# 7) Set XITE_MAN_DEST to determine where the XITE manual files will be put
#"
if [ "$XITE_HOSTTYPE" = "Debian" ]; then
	echo "XITE_MAN_DEST   = \$\$DESTDIR${DIR_SEP}usr${DIR_SEP}share${DIR_SEP}man"
else
	echo "#XITE_MAN_DEST   = ."
	echo "XITE_MAN_DEST   = \$(TOP)${DIR_SEP}man"
fi # Debian

echo "
# 8) Set XITE_DOC_DEST to determine where the XITE html files will be put
#"
if [ "$XITE_HOSTTYPE" = "Debian" ]; then
	echo "XITE_DOC_DEST   = \$\$DESTDIR${DIR_SEP}usr${DIR_SEP}share${DIR_SEP}doc${DIR_SEP}xite"
else
	echo "#XITE_DOC_DEST   = ."
	echo "XITE_DOC_DEST   = \$(TOP)${DIR_SEP}doc"
fi # Debian

echo "
# 9) Set CFLAGS
#
#DEBUG          = -DDEBUG
DEBUG           = 
"

#############################################################################
#
# OPTIM, OPTIM_GNU, CFLAGS_ALWAYS, CFLAGS_PROD_CC, CFLAGS_DEV_CC, CFLAGS_CMEX
#
#############################################################################

echo "MATLAB_HOSTTYPE   = "

if test "$XITE_HOSTTYPE" = "AIX"
then

	cat <<\EOF_AIX

REGEX           = 
DIRENT          = 

CFLAGS_ALWAYS   = -D$(XITE_HOSTTYPE) -DSYSTEM_V -DSYSV -Dvfork=fork \
                  $(DEBUG) -DDEF_STRCASECMP $(REGEX) $(DIRENT)

OPTIM           = -O
OPTIM_GNU       = -O
CDEBUG          = -g
CC_DSO_FLAGS    =
CARCH_OPT       = 

EOF_AIX

elif test "$XITE_HOSTTYPE" = "HP-UX"
then

	cat <<\EOF_HP-UX

REGEX           = 
DIRENT          = 

CFLAGS_ALWAYS   = -DHPUX -D$(XITE_HOSTTYPE) -DSYSTEM_V -DSYSV $(DEBUG) \
                  $(REGEX) $(DIRENT)

OPTIM           = +O2
OPTIM_GNU       = -O
CDEBUG          = -g
CC_DSO_FLAGS    =
CARCH_OPT       = 

EOF_HP-UX

elif test "$XITE_HOSTTYPE" = "IRIX"
then

	cat <<\EOF_IRIX

REGEX           = -DREGEX
DIRENT          = 

# The option -mips2 requires an R4000 family processor, or higher

CFLAGS_ALWAYS   = -D$(XITE_HOSTTYPE) -DSYSTEM_V -DSYSV -D_BSD_SIGNALS \
                  -Dvfork=fork -DGETPTY $(DEBUG) $(REGEX) $(DIRENT)

OPTIM           = -O2
OPTIM_GNU       = -O
CDEBUG          = -g -fullwarn
CC_DSO_FLAGS    =
CARCH_OPT       = -signed -mips2

EOF_IRIX

elif test "$XITE_HOSTTYPE" = "IRIX64"
then

	cat <<\EOF_IRIX64

REGEX           = -DREGEX
DIRENT          = 

CFLAGS_ALWAYS   = -D$(XITE_HOSTTYPE) -DSYSTEM_V -DSYSV -D_BSD_SIGNALS \
                  -Dvfork=fork -DGETPTY $(DEBUG) $(REGEX) $(DIRENT)

OPTIM           = -O2
OPTIM_GNU       = -O
CDEBUG          = -g -fullwarn
CC_DSO_FLAGS    =
CARCH_OPT       = -signed

EOF_IRIX64

elif test "$XITE_HOSTTYPE" = "Linux"
then

	cat <<\EOF_Linux

REGEX           = -DREGEX
DIRENT          = 

CFLAGS_ALWAYS   = -D$(XITE_HOSTTYPE) $(DEBUG) -Dinstring=__instring \
                  $(REGEX) $(DIRENT)

OPTIM           = -O
OPTIM_GNU       = -O3
CDEBUG          = -g
CC_DSO_FLAGS    = -fPIC
CARCH_OPT       = 

EOF_Linux

elif test "$XITE_HOSTTYPE" = "Debian"
then

	cat <<\EOF_Debian

REGEX           = -DREGEX
DIRENT          = 

CFLAGS_ALWAYS   = -DLinux $(DEBUG) -Dinstring=__instring \
                  $(REGEX) $(DIRENT)

OPTIM           = -O
OPTIM_GNU       = -O3
CDEBUG          = -g
CC_DSO_FLAGS    = -fPIC
CARCH_OPT       = 

EOF_Debian

elif test "$XITE_HOSTTYPE" = "OSF1"
then

	cat <<\EOF_OSF1

REGEX           = -DREGEX
DIRENT          = 

CFLAGS_ALWAYS   = -D$(XITE_HOSTTYPE) -DSYSTEM_V -DSYSV -Dvfork=fork $(DEBUG) \
                  $(REGEX) $(DIRENT)

OPTIM           = -O
OPTIM_GNU       = -O
CDEBUG          = -g -verbose
CC_DSO_FLAGS    =
CARCH_OPT       = -std1

EOF_OSF1

elif test "$XITE_HOSTTYPE" = "SunOS"
then

	cat <<\EOF_SunOS

REGEX           = 
DIRENT          = 

CFLAGS_ALWAYS   = -D$(XITE_HOSTTYPE) $(DEBUG) -DDEF_STRCASECMP \
                  $(REGEX) $(DIRENT)

OPTIM           = -O
OPTIM_GNU       = -O
CDEBUG          = -g
CC_DSO_FLAGS    = -PIC
CARCH_OPT       = 

EOF_SunOS

elif test "$XITE_HOSTTYPE" = "SunOS5"
then

	cat <<\EOF_SunOS5

REGEX           = -DREGEX
DIRENT          = -DNO_DIRENT

CFLAGS_ALWAYS   = -D$(XITE_HOSTTYPE) -DSYSTEM_V -DSYSV $(DEBUG) \
                  $(DIRENT) $(REGEX) -I/usr/ucbinclude

OPTIM           = -O
OPTIM_GNU       = -O
CDEBUG          = -g -v
CC_DSO_FLAGS    = -KPIC
CARCH_OPT       = 

EOF_SunOS5

elif test "$XITE_HOSTTYPE" = "ULTRIX"
then

	cat <<\EOF_ULTRIX

REGEX           = 
DIRENT          = 

CFLAGS_ALWAYS   = -D$(XITE_HOSTTYPE) $(DEBUG) $(DIRENT) $(REGEX)

OPTIM           = -O
OPTIM_GNU       = -O
CDEBUG          = -g
CC_DSO_FLAGS    =
CARCH_OPT       = 

EOF_ULTRIX

elif test "$XITE_HOSTTYPE" = "CYGWIN32"
then

	cat <<\EOF_CYGWIN32

REGEX           = 
DIRENT          = 

CFLAGS_ALWAYS   = -D$(XITE_HOSTTYPE) -DSYSTEM_V -DSYSV $(DEBUG) \
                  $(DIRENT) $(REGEX)

OPTIM           = -O
OPTIM_GNU       = -O
CDEBUG          = -g
CC_DSO_FLAGS    =
CARCH_OPT       = 

EOF_CYGWIN32

elif test "$XITE_HOSTTYPE" = "Other"
then

	cat <<\EOF_Other

REGEX           = 
DIRENT          = 

CFLAGS_ALWAYS   = -Dunknown $(DEBUG) $(DIRENT) $(REGEX)

OPTIM           = -O
OPTIM_GNU       = -O
CDEBUG          = -g
CC_DSO_FLAGS    =
CARCH_OPT       = 

EOF_Other

elif test "$XITE_HOSTTYPE" = "NT4"
then

	cat <<\EOF_NT4

REGEX           = 
DIRENT          = -DNO_DIRENT

CFLAGS_ALWAYS   = -D$(XITE_HOSTTYPE) -DSYSTEM_V -DSYSV $(DEBUG) \
                  /nologo -DDEF_STRCASECMP -Dsleep=_sleep $(DIRENT) $(REGEX)

OPTIM           = -O2
OPTIM_GNU       = -O
CDEBUG          = /Z7 /W4
CC_DSO_FLAGS    = /MD /GD
CARCH_OPT       = 

EOF_NT4

fi

echo "GCC_DSO_FLAGS   = -fPIC
"

cat <<\EOF_CFLAGS_PROD
# The following is recommended for final production version with cc
#
CFLAGS_PROD_CC  = $(CFLAGS_ALWAYS) $(OPTIM) $(CARCH_OPT) -I$(XITE_INC_DEST)

# The following is recommended during software development with cc
#
CFLAGS_DEV_CC   = $(CFLAGS_ALWAYS) $(CDEBUG) $(CARCH_OPT) -I$(XITE_INC_DEST)

CFLAGS_CMEX     = $(CFLAGS_ALWAYS) -O -I$(XITE_INC_DEST)
EOF_CFLAGS_PROD


#############################################################################
#
# GNU_WARN, CFLAGS_PROD_GCC, CFLAGS_DEV_GCC
#
#############################################################################

cat <<\EOF_GNU_WARN

GNU_WARN        = -Wall -Wmissing-prototypes -Wstrict-prototypes \
                  -Wtraditional -Wnested-externs -Wpointer-arith
EOF_GNU_WARN

if test "$XITE_HOSTTYPE" = "AIX" -o "$XITE_HOSTTYPE" = "IRIX" -o \
  "$XITE_HOSTTYPE" = "IRIX64"
then

	echo "GCC_ARCH_OPT    = -fsigned-char"

else

	echo "GCC_ARCH_OPT    ="

fi

cat <<\EOF_GNU

# The following is recommended for the final production version with gcc
#
CFLAGS_PROD_GCC = $(CFLAGS_ALWAYS) $(GCC_ARCH_OPT) $(OPTIM_GNU) \
                  -I$(XITE_INC_DEST)

# The following is recommended during software development with gcc
#
CFLAGS_DEV_GCC  = $(CFLAGS_ALWAYS) $(GCC_ARCH_OPT) -g $(GNU_WARN) \
                  -I$(XITE_INC_DEST)

EOF_GNU


#############################################################################
#
# CFLAGS
#
#############################################################################

cat <<\EOF_CFLAGS

CFLAGS          = $(CFLAGS_PROD_CC)
DSO_FLAGS       = $(CC_DSO_FLAGS)

EOF_CFLAGS

#############################################################################
#
# LFLAGS, XLIB
#
#############################################################################

echo "# 10) Set LFLAGS
#"

if [ -n "$RPATH_OPT" ]; then
	echo "XITE_LIB_RPATH  = \$(RPATH_OPT) \$(XITE_LIB_DEST)"
else
	echo "XITE_LIB_RPATH  = "
fi

if [ "$XITE_HOSTTYPE" != "NT4" ]; then
	echo "LFLAGS_XITE     = -L\$(XITE_LIB_DEST) \$(XITE_LIB_RPATH)"
else
	echo "LFLAGS_XITE     = -LIBPATH:\$(XITE_LIB_DEST)"
fi

if test "$XITE_HOSTTYPE" = "OSF1"
then

	cat <<\EOF_LFLAGS

LFLAGS          = $(LFLAGS_XITE)
LFLAGS_CMEX     = -L$(XITE_LIB_DEST)
LFLAGS_MEX      = $(LFLAGS_CMEX) LDFLAGS='$$LDFLAGS $(RPATH_OPT) $(XITE_LIB_DEST)'

CC_LD           = $(CC) -shared
# If archive libraries: -all
CC_DSO_NAME_FLAGS = -soname
CC_LD_FLAGS     = $(LIB_MATH)

# 11) Set extra libraries
#
XLIB            = -ldnet_stub -lots
EOF_LFLAGS

elif test "$XITE_HOSTTYPE" = "SunOS5"
then

	cat <<\EOF_LFLAGS
LFLAGS          = -L/usr/ucblib $(RPATH_OPT) /usr/ucblib $(LFLAGS_XITE)
LFLAGS_CMEX     = -L/usr/ucblib -L$(XITE_LIB_DEST)
LFLAGS_MEX      = $(LFLAGS_CMEX) LDFLAGS='$$LDFLAGS $(RPATH_OPT) /usr/ucblib \
                  $(RPATH_OPT) $(XITE_LIB_DEST)'

CC_LD           = $(CC) -G -i -z defs
# "-z text" to give fatal error if parts of code is not shareable
#   (causing patching at runtime)
CC_DSO_NAME_FLAGS = -h
CC_LD_FLAGS     = -lc $(LIB_MATH)

# 11) Set extra libraries
#
XLIB            = -lucb
EOF_LFLAGS

elif test "$XITE_HOSTTYPE" = "SunOS"
then

	cat <<\EOF_LFLAGS
LFLAGS          = $(LFLAGS_XITE)
LFLAGS_CMEX     = -L$(XITE_LIB_DEST)
LFLAGS_MEX      = $(LFLAGS_CMEX)

CC_LD           = ld
# "-z text" to give fatal error if parts of code is not shareable
#   (causing patching at runtime)
CC_DSO_NAME_FLAGS =
CC_LD_FLAGS     = 

# 11) Set extra libraries
#
XLIB            =
EOF_LFLAGS

elif test "$XITE_HOSTTYPE" = "NT4"
then

	cat <<\EOF_LFLAGS
LFLAGS          = /link $(LFLAGS_XITE)
LFLAGS_CMEX     = $(LFLAGS)
LFLAGS_MEX      = $(LFLAGS_CMEX)

CC_LD           = $(CC) /nologo /LD
CC_DSO_NAME_FLAGS = /Fe
CC_LD_FLAGS     =

# 11) Set extra libraries
#
XLIB            = 
EOF_LFLAGS

elif test "$XITE_HOSTTYPE" = "IRIX" -o "$XITE_HOSTTYPE" = "IRIX64"
then

	cat <<\EOF_LFLAGS
LFLAGS          = $(LFLAGS_XITE)
LFLAGS_CMEX     = -L$(XITE_LIB_DEST)
LFLAGS_MEX      = $(LFLAGS_CMEX) -L$(MATLAB_LIB) \
                  LDFLAGS='$$LDFLAGS $(RPATH_OPT) $(XITE_LIB_DEST)'

CC_LD           = $(CC) -shared
# If archive libraries: -all
CC_DSO_NAME_FLAGS = -soname
CC_LD_FLAGS     =

# 11) Set extra libraries
#
XLIB            = 
EOF_LFLAGS

elif test "$XITE_HOSTTYPE" = "AIX"
then

	cat <<\EOF_LFLAGS
LFLAGS          = $(LFLAGS_XITE)
LFLAGS_CMEX     = -L$(XITE_LIB_DEST)
LFLAGS_MEX      = $(LFLAGS_CMEX)

CC_LD           = ld -G
# If archive libraries: -bexpall
CC_DSO_NAME_FLAGS = 
CC_LD_FLAGS     =

# 11) Set extra libraries
#
XLIB            = 
EOF_LFLAGS

elif test "$XITE_HOSTTYPE" = "Linux"
then

	cat <<\EOF_LFLAGS
LFLAGS          = $(LFLAGS_XITE)
LFLAGS_CMEX     = -L$(XITE_LIB_DEST)
LFLAGS_MEX      = $(LFLAGS_CMEX) \
                  LDFLAGS='$$LDFLAGS $(RPATH_OPT) $(XITE_LIB_DEST)'

CC_LD           = $(CC) -shared
# If archive libraries: --whole-archive
CC_DSO_NAME_FLAGS = -Xlinker -soname -Xlinker
CC_LD_FLAGS     =

# 11) Set extra libraries
#
XLIB            = 
EOF_LFLAGS

elif test "$XITE_HOSTTYPE" = "Debian"
then

	cat <<\EOF_LFLAGS
LFLAGS          = $(LFLAGS_XITE)
LFLAGS_CMEX     =
LFLAGS_MEX      = $(LFLAGS_CMEX) \
                  LDFLAGS='$$LDFLAGS $(RPATH_OPT) $(XITE_LIB_DEST)'

CC_LD           = $(CC) -shared
# If archive libraries: --whole-archive
CC_DSO_NAME_FLAGS = -Xlinker -soname -Xlinker
CC_LD_FLAGS     = -s

# 11) Set extra libraries
#
XLIB            = 
EOF_LFLAGS

else

	cat <<\EOF_LFLAGS
LFLAGS          = $(LFLAGS_XITE)
LFLAGS_CMEX     = -L$(XITE_LIB_DEST)
LFLAGS_MEX      = $(LFLAGS_CMEX)

CC_LD           =
CC_DSO_NAME_FLAGS =
CC_LD_FLAGS     =

# 11) Set extra libraries
#
XLIB            = 
EOF_LFLAGS

fi

echo "
GNU_LD          = gcc -shared
GNU_DSO_NAME_FLAGS = -Xlinker -soname -Xlinker
GNU_LD_FLAGS    = 
"

cat <<\EOF_LD
LD              = $(CC_LD)
DSO_NAME_FLAGS  = $(CC_DSO_NAME_FLAGS)
LD_FLAGS        = $(CC_LD_FLAGS)
EOF_LD

#############################################################################
#
# MATLAB, MATLAB_INC, MATLAB_LIB, MATLAB_MEX_DEST
#
#############################################################################

echo "
# 12) Set MATLAB_INC
#
MATLAB          = ${DIR_SEP}local${DIR_SEP}matlab
MATLAB_INC      = \$(MATLAB)${DIR_SEP}extern${DIR_SEP}include

# 13) Set MATLAB_LIB
#
MATLAB_LIB      = \$(MATLAB)${DIR_SEP}extern${DIR_SEP}lib${DIR_SEP}\$(MATLAB_HOSTTYPE)"

if [ "$XITE_HOSTTYPE" != "NT4" ]; then
	if [ -n "$RPATH_OPT" ]; then
		echo "LFLAGS_MATLAB   = -L\$(MATLAB_LIB) \$(RPATH_OPT) \$(MATLAB_LIB)"
	else
		echo "LFLAGS_MATLAB   = -L\$(MATLAB_LIB)"
	fi
	if [ "$XITE_HOSTTYPE" = "SunOS5" ]; then
		echo "LIB_MATLAB      = -lmat -lmx -lmi -lut"
	else
		echo "LIB_MATLAB      = -lmat -lmx"
	fi
else
	echo "LFLAGS_MATLAB   = -LIBPATH:\$(MATLAB_LIB)"
	echo "LIB_MATLAB      = libmat.lib libmx.lib"
fi

if [ "$XITE_HOSTTYPE" != "NT4" ]; then
echo "XITE_MATLAB_LIB   = lib\$(XITE)_matlab.${LIB_EXT}
XITE_MATLAB_MAJ   = .3
XITE_MATLAB_MIN   = .4"
else
echo "XITE_MATLAB_LIB   = lib\$(XITE)_matlab_static.${LIB_EXT}
XITE_MATLAB_MAJ   = 
XITE_MATLAB_MIN   = "
fi
echo "XITE_MATLAB_DSO   = lib\$(XITE)_matlab${DSO_EXT}
XITE_MATLAB_DSO_V = \$(XITE_MATLAB_DSO)\$(XITE_MATLAB_MAJ)\$(XITE_MATLAB_MIN)
"

if test "$XITE_HOSTTYPE" = "NT4"
then
	echo "LIB_XITE_MATLAB     = \$(XITE_MATLAB_LIB)"
	echo "LIB_XITE_MATLAB_IMP = lib\$(XITE)_matlab.${LIB_EXT}"
else
	echo "LIB_XITE_MATLAB     = -l\$(XITE)_matlab"
	echo "LIB_XITE_MATLAB_IMP = \$(LIB_XITE_MATLAB)"
fi

echo "
# 14) Set MATLAB_MEX_DEST
#
MATLAB_MEX_DEST   = \$(MATLAB)${DIR_SEP}toolbox${DIR_SEP}local"

#############################################################################
#
# TIFF_INC_DIR, TIFF_LIB_DIR
#
#############################################################################

echo "
# 15) Set TIFF_INC_DIR
#"
if [ "$XITE_HOSTTYPE" = "Debian" ]; then
	echo "TIFF_INC_DIR    = ${DIR_SEP}usr${DIR_SEP}include"
elif [ "$XITE_HOSTTYPE" != "NT4" ]; then
	echo "TIFF_INC_DIR    = ${DIR_SEP}usr${DIR_SEP}local${DIR_SEP}include"
else
	echo "TIFF_INC_DIR    = c:${DIR_SEP}tiff${DIR_SEP}include"
fi

echo "
# 16) Set TIFF_LIB_DIR
#"

if [ "$XITE_HOSTTYPE" = "Debian" ]; then
	echo "TIFF_LIB_DIR    = ${DIR_SEP}usr${DIR_SEP}lib"
	echo "LFLAGS_TIFF     ="
elif [ "$XITE_HOSTTYPE" != "NT4" ]; then
	echo "TIFF_LIB_DIR    = ${DIR_SEP}usr${DIR_SEP}local${DIR_SEP}lib"
	if [ -n "$RPATH_OPT" ]; then
		echo "LFLAGS_TIFF     = -L\$(TIFF_LIB_DIR) \$(RPATH_OPT) \$(TIFF_LIB_DIR)"
	else
		echo "LFLAGS_TIFF     = -L\$(TIFF_LIB_DIR)"
	fi
else
	echo "TIFF_LIB_DIR    = c:${DIR_SEP}tiff${DIR_SEP}lib"
	echo "LFLAGS_TIFF     = -LIBPATH:\$(TIFF_LIB_DIR) /NODEFAULTLIB:LIBCMT.LIB"
fi

if [ "$XITE_HOSTTYPE" != "NT4" ]; then
echo "XITE_TIFF_LIB    = lib\$(XITE)_tiff.${LIB_EXT}
XITE_TIFF_MAJ    = .3
XITE_TIFF_MIN    = .4"
else
echo "XITE_TIFF_LIB    = lib\$(XITE)_tiff_static.${LIB_EXT}
XITE_TIFF_MAJ    = 
XITE_TIFF_MIN    = "
fi
echo "XITE_TIFF_DSO    = lib\$(XITE)_tiff${DSO_EXT}
XITE_TIFF_DSO_V  = \$(XITE_TIFF_DSO)\$(XITE_TIFF_MAJ)\$(XITE_TIFF_MIN)
"

if test "$XITE_HOSTTYPE" = "NT4"
then
	echo "LIB_XITE_TIFF     = \$(XITE_TIFF_LIB)"
	echo "LIB_XITE_TIFF_IMP = lib\$(XITE)_tiff.${LIB_EXT}"
else
	echo "LIB_XITE_TIFF     = -l\$(XITE)_tiff"
	echo "LIB_XITE_TIFF_IMP = \$(LIB_XITE_TIFF)"
fi


#############################################################################
#
# PNM_INC_DIR, PNM_LIB_DIR
#
#############################################################################

echo "
# 17) Set PNM_INC_DIR
#"
if [ "$XITE_HOSTTYPE" = "Debian" ]; then
	echo "PNM_INC_DIR    = ${DIR_SEP}usr${DIR_SEP}include"
elif [ "$XITE_HOSTTYPE" != "NT4" ]; then
	echo "PNM_INC_DIR    = ${DIR_SEP}usr${DIR_SEP}local${DIR_SEP}include"
else
	echo "PNM_INC_DIR    = c:${DIR_SEP}PNM${DIR_SEP}include"
fi

echo "
# 18) Set PNM_LIB_DIR
#"
if [ "$XITE_HOSTTYPE" = "Debian" ]; then
	echo "PNM_LIB_DIR    = ${DIR_SEP}usr${DIR_SEP}lib"
	echo "LFLAGS_PNM     ="
elif [ "$XITE_HOSTTYPE" != "NT4" ]; then
	echo "PNM_LIB_DIR    = ${DIR_SEP}usr${DIR_SEP}local${DIR_SEP}lib"
	if [ -n "$RPATH_OPT" ]; then
		echo "LFLAGS_PNM     = -L\$(PNM_LIB_DIR) \$(RPATH_OPT) \$(PNM_LIB_DIR)"
	else
		echo "LFLAGS_PNM     = -L\$(PNM_LIB_DIR)"
	fi
else
	echo "PNM_LIB_DIR    = c:${DIR_SEP}PNM${DIR_SEP}lib"
	echo "LFLAGS_PNM     = -LIBPATH:\$(PNM_LIB_DIR)"
fi

if [ "$XITE_HOSTTYPE" != "NT4" ]; then
echo "XITE_PNM_LIB    = lib\$(XITE)_pnm.${LIB_EXT}
XITE_PNM_MAJ    = .3
XITE_PNM_MIN    = .4"
else
echo "XITE_PNM_LIB    = lib\$(XITE)_pnm_static.${LIB_EXT}
XITE_PNM_MAJ    = 
XITE_PNM_MIN    = "
fi
echo "XITE_PNM_DSO    = lib\$(XITE)_pnm${DSO_EXT}
XITE_PNM_DSO_V  = \$(XITE_PNM_DSO)\$(XITE_PNM_MAJ)\$(XITE_PNM_MIN)
"
 
if test "$XITE_HOSTTYPE" = "NT4"
then
	echo "LIB_XITE_PNM     = \$(XITE_PNM_LIB)"
	echo "LIB_XITE_PNM_IMP = lib\$(XITE)_pnm.${LIB_EXT}"
else
	echo "LIB_XITE_PNM     = -l\$(XITE)_pnm"
	echo "LIB_XITE_PNM_IMP = \$(LIB_XITE_PNM)"
fi


#############################################################################
#
# FWF_INC_DIR, FWF_LIB_DIR
#
#############################################################################

if [ "$XITE_HOSTTYPE" != "NT4" ]; then
	echo "
# 19) Set FWF_INC_DIR
#
FWF_INC_DIR     = \$(XITE_INC_DEST)

# 20) Set FWF_LIB_DIR
#
FWF             = fwf
FWF_LIB_DIR     = \$(XITE_LIB_DEST)
FWF_LIB         = lib\$(FWF).${LIB_EXT}
FWF_MAJ         = .3
FWF_MIN         = .4
FWF_DSO         = lib\$(FWF)${DSO_EXT}
FWF_DSO_V       = \$(FWF_DSO)\$(FWF_MAJ)\$(FWF_MIN)
LIB_FWF         = -l\$(FWF)
LIB_FWF_IMP     = \$(LIB_FWF)
"

#############################################################################
#
# XPM_INC_DIR, XPM_LIB_DIR
#
#############################################################################

	echo "
# 21) Set XPM_INC_DIR
#
XPM_INC_DIR     = \$(XITE_INC_DEST)

# 22) Set XPM_LIB_DIR
#
XPM             = xpm
XPM_LIB_DIR     = \$(XITE_LIB_DEST)
XPM_LIB         = lib\$(XPM).${LIB_EXT}
XPM_MAJ         = .3
XPM_MIN         = .4
XPM_DSO         = lib\$(XPM)${DSO_EXT}
XPM_DSO_V       = \$(XPM_DSO)\$(XPM_MAJ)\$(XPM_MIN)
LIB_XPM         = -l\$(XPM)
LIB_XPM_IMP     = \$(LIB_XPM)
"

if [ -n "$RPATH_OPT" ]; then
	echo "LFLAGS_XPM      = -L\$(XPM_LIB_DIR) \$(RPATH_OPT) \$(XPM_LIB_DIR)"
else
	echo "LFLAGS_XPM      = -L\$(XPM_LIB_DIR)"
fi


fi

#############################################################################
#
# AR, RANLIB, SRC, WLIB
#
#############################################################################

cat <<\EOF_AR
######################################################################
#
# There should be no need to make changes below this point
#
######################################################################

EOF_AR


if test "$XITE_HOSTTYPE" = "NT4"
then
	echo "AR              = lib /nologo"
	echo "AR_A_OPT        = "
	echo "AR_X_OPT        = /extract:"
	echo "AR_T_OPT        = /list"
else
	echo "AR              = ar"
	echo "AR_A_OPT        = r"
	if [ "$XITE_HOSTTYPE" != SunOS ]; then
		echo "AR_X_OPT        = -x"
		echo "AR_T_OPT        = -t"
	else
		echo "AR_X_OPT        = x"
		echo "AR_T_OPT        = t"
	fi
fi

if test "$XITE_HOSTTYPE" = "SunOS" -o \
	"$XITE_HOSTTYPE" = "ULTRIX" -o \
	"$XITE_HOSTTYPE" = "CYGWIN32" -o \
	"$XITE_HOSTTYPE" = "Other"
then

	cat <<\EOF_RANLIB
RANLIB          = ranlib
SRC             = .
EOF_RANLIB

elif test "$XITE_HOSTTYPE" = "NT4"
then
	echo "RANLIB          ="
else

	cat <<\EOF_RANLIB
RANLIB          = echo
SRC             = .
EOF_RANLIB

fi

if test "$XITE_HOSTTYPE" = "AIX"
then

	echo "WLIB            = -lXaw -lXmu -lXt -lXext -lX11 -liconv"

elif test "$XITE_HOSTTYPE" = "SunOS5"
then

	echo "WLIB            = -lXaw -lXmu -lXt -lXext -lX11"

elif test "$XITE_HOSTTYPE" = "Debian"
then

	echo "WLIB            = -L/usr/X11R6/lib -lXaw -lXmu -lXt -lXext -lX11"

elif test "$XITE_HOSTTYPE" != "NT4"
then

	echo "WLIB            = -lXaw -lXmu -lXt -lXext -lX11"
fi

#############################################################################
#
# COMPILE, LINK, XLINK, DOC
#
#############################################################################

echo "

# For plain XITE C source
#
COMPILE_c       = \$(CC) \$(CFLAGS) -c
COMPILE_c_dso   = \$(COMPILE_c) \$(DSO_FLAGS) -DXITE_DLL
LINK_c          = \$(CC) \$(CFLAGS) -DMAIN \$(@).c \\
                  \$(LFLAGS) \$(LIB_XITE) \$(XLIB) \$(LIB_MATH) \\
                  ${OUT_OPT}\$(XITE_BIN_DEST)${DIR_SEP}\$(@)${EXE_EXT}
LINK_c_dso      = \$(CC) \$(CFLAGS) \$(DSO_FLAGS) -DMAIN \$(@).c \\
                  \$(LFLAGS) \$(LIB_XITE_IMP) \$(XLIB) \$(LIB_MATH) \\
                  ${OUT_OPT}\$(XITE_BIN_DEST)${DIR_SEP}\$(@)${EXE_EXT}
"

if [ "$XITE_HOSTTYPE" != "NT4" ]; then
	echo "
# C source with X11
#
COMPILE_x       = \$(COMPILE_c) -I\$(X_INC_DIR)
COMPILE_x_dso   = \$(COMPILE_x) \$(DSO_FLAGS)

# ... link with libraries
#
LINK_x          = \$(CC) \$(CFLAGS) -I\$(X_INC_DIR) -DMAIN \$(@).c \\
                  \$(LFLAGS) \$(LFLAGS_X) \$(LIB_XITE_X) \$(LIB_XITE) \\
                  \$(LIB_FWF) \\
                  \$(LFLAGS_XPM) \$(LIB_XPM) \$(WLIB) \$(XLIB) \$(LIB_MATH) \\
                  ${OUT_OPT}\$(XITE_BIN_DEST)${DIR_SEP}\$(@).bin
LINK_x_dso      = \$(CC) \$(CFLAGS) \$(DSO_FLAGS) -DMAIN -I\$(X_INC_DIR) \\
                  \$(@).c \$(LFLAGS) \$(LFLAGS_X) \$(LIB_XITE_X_IMP) \\
                  \$(LIB_XITE_IMP) \$(LIB_FWF_IMP) \\
                  \$(LFLAGS_XPM) \$(LIB_XPM_IMP) \$(WLIB) \$(XLIB) \\
                  \$(LIB_MATH) \\
                  ${OUT_OPT}\$(XITE_BIN_DEST)${DIR_SEP}\$(@).bin

# ... link with libraries and object file dependencies
#
LINK_x_obj      = \$(CC) \$(CFLAGS) -I\$(X_INC_DIR) -DMAIN \$(@).c \$(?) \\
                  \$(LFLAGS) \$(LFLAGS_X) \$(LIB_XITE_X) \$(LIB_XITE) \\
                  \$(LIB_FWF) \\
                  \$(LFLAGS_XPM) \$(LIB_XPM) \$(WLIB) \$(XLIB) \$(LIB_MATH) \\
                  ${OUT_OPT}\$(XITE_BIN_DEST)${DIR_SEP}\$(@).bin
LINK_x_obj_dso  = \$(CC) \$(CFLAGS) \$(DSO_FLAGS) -DMAIN -I\$(X_INC_DIR) \\
                  \$(@).c \$(?) \\
                  \$(LFLAGS) \$(LFLAGS_X) \$(LIB_XITE_X_IMP) \\
                  \$(LIB_XITE_IMP) \$(LIB_FWF_IMP) \$(LFLAGS_XPM) \\
                  \$(LIB_XPM_IMP) \$(WLIB) \$(XLIB) \$(LIB_MATH) \\
                  ${OUT_OPT}\$(XITE_BIN_DEST)${DIR_SEP}\$(@).bin
"

fi

echo "
# C source with libtiff
#
COMPILE_t       = \$(COMPILE_c) -I\$(TIFF_INC_DIR)
COMPILE_t_dso   = \$(COMPILE_t) \$(DSO_FLAGS) -DXITE_TIFF_DLL
LINK_t          = \$(CC) \$(CFLAGS) -DMAIN -I\$(TIFF_INC_DIR) \$(@).c \\
                  \$(LFLAGS) \$(LFLAGS_TIFF) \$(LIB_XITE_TIFF) \$(LIB_TIFF) \\
                  \$(LIB_XITE) \$(XLIB) \$(LIB_MATH) \\
                  ${OUT_OPT}\$(XITE_BIN_DEST)${DIR_SEP}\$(@)${EXE_EXT}
LINK_t_dso      = \$(CC) \$(CFLAGS) \$(DSO_FLAGS) -DMAIN -I\$(TIFF_INC_DIR) \\
                  \$(@).c \$(LFLAGS) \$(LFLAGS_TIFF) \$(LIB_XITE_TIFF_IMP) \\
                  \$(LIB_TIFF) \$(LIB_XITE_IMP) \$(XLIB) \\
                  \$(LIB_MATH) \\
                  ${OUT_OPT}\$(XITE_BIN_DEST)${DIR_SEP}\$(@)${EXE_EXT}

# C source with pnm
#
COMPILE_p       = \$(COMPILE_c) -I\$(PNM_INC_DIR)
COMPILE_p_dso   = \$(COMPILE_p) \$(DSO_FLAGS) -DXITE_PNM_DLL
LINK_p          = \$(CC) \$(CFLAGS) -DMAIN -I\$(PNM_INC_DIR) \$(@).c \\
                  \$(LFLAGS) \$(LFLAGS_PNM) \$(LIB_XITE_PNM) \$(LIB_PNM) \\
                  \$(LIB_XITE) \$(XLIB) \$(LIB_MATH) \\
                  ${OUT_OPT}\$(XITE_BIN_DEST)${DIR_SEP}\$(@)${EXE_EXT}
LINK_p_dso      = \$(CC) \$(CFLAGS) \$(DSO_FLAGS) -DMAIN -I\$(PNM_INC_DIR) \\
                  \$(@).c \$(LFLAGS) \$(LFLAGS_PNM) \$(LIB_XITE_PNM_IMP) \\
                  \$(LIB_PNM) \$(LIB_XITE_IMP) \$(XLIB) \\
                  \$(LIB_MATH) \\
                  ${OUT_OPT}\$(XITE_BIN_DEST)${DIR_SEP}\$(@)${EXE_EXT}

# C source with MATLAB
#
COMPILE_m       = \$(COMPILE_c) -I\$(MATLAB_INC)
COMPILE_m_dso   = \$(COMPILE_m) \$(DSO_FLAGS) -DXITE_MATLAB_DLL
LINK_m          = \$(CC) \$(CFLAGS) -DMAIN -I\$(MATLAB_INC) \$(@).c \\
                  \$(LFLAGS) \$(LFLAGS_MATLAB) \$(LIB_XITE_MATLAB) \\
                  \$(LIB_MATLAB) \$(LIB_XITE) \$(XLIB) \$(LIB_MATH) \\
                  ${OUT_OPT}\$(XITE_BIN_DEST)${DIR_SEP}\$(@)${EXE_EXT}
LINK_m_dso      = \$(CC) \$(CFLAGS) \$(DSO_FLAGS) -DMAIN -I\$(MATLAB_INC) \\
                  \$(@).c \$(LFLAGS) \$(LFLAGS_MATLAB) \$(LIB_XITE_MATLAB_IMP) \\
                  \$(LIB_MATLAB) \$(LIB_XITE_IMP) \$(XLIB) \\
                  \$(LIB_MATH) \\
                  ${OUT_OPT}\$(XITE_BIN_DEST)${DIR_SEP}\$(@)${EXE_EXT}
CMEX            = cmex CC=\$(CC) \$(CFLAGS_CMEX) \$(@).c \\
                  \$(LFLAGS_CMEX) \$(LIB_XITE) \$(LIB_XITE_MATLAB) \\
                  ${OUT_OPT}\$(MATLAB_MEX_DEST)${DIR_SEP}\$(@)
MEX             = mex CC=\$(CC) \$(CFLAGS_CMEX) \$(@).c \\
                  \$(LFLAGS_MEX) \$(LIB_XITE_IMP) \$(LIB_XITE_MATLAB_IMP) \\
                  -output \$(MATLAB_MEX_DEST)${DIR_SEP}\$(@)
"

if [ "$XITE_HOSTTYPE" != "NT4" ]; then
	echo "
# C source with X11, fwf and xpm
#
COMPILE_f       = \$(COMPILE_x) -I\$(FWF_INC_DIR) -I\$(XPM_INC_DIR)
COMPILE_f_dso   = \$(COMPILE_f) \$(DSO_FLAGS)
"

fi

echo "
# Documentation for C
#
MANDOC          = \$(XITE_BIN_DEST)${DIR_SEP}cdoc -t
HTMLDOC         = \$(XITE_BIN_DEST)${DIR_SEP}cdoc -h

# Make MATLAB .m-file for MATLAB help
#
MFILE           = awk '/%\$(@:.m=) /,/\*\// {if (length==2) next; else print}'

# Initialize directory-specific variables to avoid errors from make.
#
"

cat <<\EOF_INITVAR
OBJ       = "_OBJ_"
PROG      = "_PROG_"
MANP      = "_MANP_"
MANP_SH   = "_MANP_SH_"
ROFF3     = "_ROFF3_"
CINCL     = "_CINCL_"
SCRIPTS   = "_SCRIPTS_"
XOBJ      = "_XOBJ_"
XPROG     = "_XPROG_"
TIFFOBJ   = "_TIFFOBJ_"
TIFFPROG  = "_TIFFPROG_"
PNMOBJ    = "_PNMOBJ_"
PNMPROG   = "_PNMPROG_"
MATOBJ    = "_MATOBJ_"
MATPROG   = "_MATPROG_"
MATMEX    = "_MATMEX_"
MATHELP   = "_MATHELP_"
FWFOBJ    = "_FWFOBJ_"
FWFPROG   = "_FWFPROG_"
FWFINCL   = "_FWFINCL_"
XPMOBJ    = "_XPMOBJ_"
XPMPROG   = "_XPMPROG_"
XPMINCL   = "_XPMINCL_"

all:	     include lib dso program doc

# Get directory-specific variables and define the targets object, lib and
# program
#
EOF_INITVAR

if test "$XITE_HOSTTYPE" != "NT4"
then
	echo "include Makefile.defs"
else
	echo "!include Makefile.defs"
fi

#############################################################################
#
# Target rules
#
#############################################################################

echo "
# Overall rules
#
#include:     cincl fwfincl xpmincl
#object:      cobj xobj tiffobj pnmobj matobj
#lib:	      clib xlib tifflib pnmlib matlib
#program:     cprog xprog scripts tiffprog pnmprog matprog
#doc:         manpage roff3 mathelp
#dso:         xite_dso xpm_dso fwf_dso xiteX_dso xite_tiff_dso xite_pnm_dso xite_matlab_dso
"

if [ "$XITE_HOSTTYPE" = "ULTRIX" -o "$XITE_HOSTTYPE" = "SunOS" -o \
	"$XITE_HOSTTYPE" = "AIX" ]; then

    echo "xite_dso:
	@echo \"Can not (or don't know how to) build dynamic shared objects on this platform.\"

xpm_dso:         xite_dso
fwf_dso:         xite_dso
xiteX_dso:       xite_dso
xite_tiff_dso:   xite_dso
xite_pnm_dso:    xite_dso
xite_matlab_dso: xite_dso
"

else

    if [ "$XITE_HOSTTYPE" = "SunOS5" -o \
	 "$XITE_HOSTTYPE" = "SunOS"  -o \
	 "$XITE_HOSTTYPE" = "IRIX64" -o \
	 "$XITE_HOSTTYPE" = "IRIX"   -o \
	 "$XITE_HOSTTYPE" = "OSF1"   -o \
	 "$XITE_HOSTTYPE" = "Debian" -o \
	 "$XITE_HOSTTYPE" = "Linux" ]; then

	dso_target xite_dso "\$(XITE_DSO)" "\$(XITE_LIB_DEST)" \
                            "\$(XITE_DSO_V)" \
			    "\$(XITE_LIB)" "\$(XITE_LIB_DEST)" \
			    "\$(LFLAGS_XITE) \$(LD_FLAGS)"

    else

	if [ "$XITE_HOSTTYPE" != "NT4" ]; then
	    dso_target xite_dso "\$(XITE_DSO)" "\$(XITE_LIB_DEST)" \
				"\$(XITE_DSO_V)" \
				"\$(XITE_LIB)" "\$(XITE_LIB_DEST)" \
				"\$(LD_FLAGS)"
	else
	    dso_target xite_dso "\$(XITE_DSO)" "\$(XITE_BIN_DEST)" \
				"\$(XITE_DSO_V)" \
				"\$(XITE_LIB)" "\$(XITE_LIB_DEST)" \
				"\$(LD_FLAGS)"
	fi
    fi

    if [ "$XITE_HOSTTYPE" != "NT4" ]; then

	if [ "$XITE_HOSTTYPE" = "SunOS5" -o \
	     "$XITE_HOSTTYPE" = "SunOS"  -o \
	     "$XITE_HOSTTYPE" = "IRIX"   -o \
	     "$XITE_HOSTTYPE" = "IRIX64" -o \
	     "$XITE_HOSTTYPE" = "OSF1"   -o \
	     "$XITE_HOSTTYPE" = "Debian" -o \
	     "$XITE_HOSTTYPE" = "Linux" ];
	then
	    dso_target xiteX_dso "\$(XITE_X_DSO)" "\$(XITE_LIB_DEST)" \
				 "\$(XITE_X_DSO_V)" \
				 "\$(XITE_LIB_X)" "\$(XITE_LIB_DEST)" \
				 "\$(LFLAGS) \$(LFLAGS_X) \$(LFLAGS_XPM) \$(LIB_FWF_IMP) \$(LIB_XPM_IMP) \$(WLIB) \$(LIB_XITE_IMP) \$(LD_FLAGS)"
	    dso_target fwf_dso   "\$(FWF_DSO)" "\$(XITE_LIB_DEST)" \
				 "\$(FWF_DSO_V)" \
				 "\$(FWF_LIB)" "\$(XITE_LIB_DEST)" \
				 "\$(LFLAGS) \$(LFLAGS_X) \$(LFLAGS_XPM) \$(LIB_XPM_IMP) \$(WLIB) \$(LIB_XITE_IMP) \$(LD_FLAGS)"

	    dso_target xpm_dso   "\$(XPM_DSO)" "\$(XITE_LIB_DEST)" \
				 "\$(XPM_DSO_V)" \
				 "\$(XPM_LIB)" "\$(XITE_LIB_DEST)" \
				 "\$(LFLAGS) \$(LFLAGS_X) \$(WLIB) \$(LIB_XITE_IMP) \$(LD_FLAGS)"

	else

	    dso_target xiteX_dso "\$(XITE_X_DSO)" "\$(XITE_LIB_DEST)" \
				 "\$(XITE_X_DSO_V)" \
				 "\$(XITE_LIB_X)" "\$(XITE_LIB_DEST)" \
				 "\$(LD_FLAGS)"
	    dso_target fwf_dso   "\$(FWF_DSO)" "\$(XITE_LIB_DEST)" \
				 "\$(FWF_DSO_V)" \
				 "\$(FWF_LIB)" "\$(XITE_LIB_DEST)" \
				 "\$(LD_FLAGS)"

	    dso_target xpm_dso   "\$(XPM_DSO)" "\$(XITE_LIB_DEST)" \
				 "\$(XPM_DSO_V)" \
				 "\$(XPM_LIB)" "\$(XITE_LIB_DEST)" \
				 "\$(LD_FLAGS)"
	fi
    fi


    if [ "$XITE_HOSTTYPE" != "NT4" ]; then
	dso_target xite_matlab_dso "\$(XITE_MATLAB_DSO)" "\$(XITE_LIB_DEST)" \
                             "\$(XITE_MATLAB_DSO_V)" \
                             "\$(XITE_MATLAB_LIB)" "\$(XITE_LIB_DEST)" \
                             "\$(LFLAGS) \$(LIB_XITE_IMP) \$(LFLAGS_MATLAB) \$(LIB_MATLAB) \$(LD_FLAGS)"

    else
	dso_target xite_matlab_dso "\$(XITE_MATLAB_DSO)" "\$(XITE_BIN_DEST)" \
                             "\$(XITE_MATLAB_DSO_V)" \
                             "\$(XITE_MATLAB_LIB)" "\$(XITE_LIB_DEST)" \
                             "\$(LFLAGS) \$(LIB_XITE_IMP) \$(LFLAGS_MATLAB) \$(LIB_MATLAB) \$(LD_FLAGS)"

    fi

    if [ "$XITE_HOSTTYPE" != "NT4" ]; then
	dso_target xite_tiff_dso "\$(XITE_TIFF_DSO)" "\$(XITE_LIB_DEST)" \
                             "\$(XITE_TIFF_DSO_V)" \
                             "\$(XITE_TIFF_LIB)" "\$(XITE_LIB_DEST)" \
                             "\$(LFLAGS) \$(LIB_XITE_IMP) \$(LFLAGS_TIFF) \$(LIB_TIFF) \$(LD_FLAGS)"

    else
	dso_target xite_tiff_dso "\$(XITE_TIFF_DSO)" "\$(XITE_BIN_DEST)" \
                             "\$(XITE_TIFF_DSO_V)" \
                             "\$(XITE_TIFF_LIB)" "\$(XITE_LIB_DEST)" \
                             "\$(LFLAGS) \$(LIB_XITE_IMP) \$(LFLAGS_TIFF) \$(LIB_TIFF) \$(LD_FLAGS)"

    fi

    if [ "$XITE_HOSTTYPE" != "NT4" ]; then
	dso_target xite_pnm_dso "\$(XITE_PNM_DSO)" "\$(XITE_LIB_DEST)" \
                             "\$(XITE_PNM_DSO_V)" \
                             "\$(XITE_PNM_LIB)" "\$(XITE_LIB_DEST)" \
                             "\$(LFLAGS) \$(LIB_XITE_IMP) \$(LFLAGS_PNM) \$(LIB_PNM) \$(LD_FLAGS)"

    else
	dso_target xite_pnm_dso "\$(XITE_PNM_DSO)" "\$(XITE_BIN_DEST)" \
                             "\$(XITE_PNM_DSO_V)" \
                             "\$(XITE_PNM_LIB)" "\$(XITE_LIB_DEST)" \
                             "\$(LFLAGS) \$(LIB_XITE_IMP) \$(LFLAGS_PNM) \$(LIB_PNM) \$(LD_FLAGS)"

    fi
fi

echo "
manpage:     \$(MANP) \$(MANP_SH)
roff3:       \$(ROFF3)
scripts:     \$(SCRIPTS)
clean:  
	     @\$(RM_F) *.${OBJ_EXT} \$(PROG) \$(XPROG) \$(TIFFPROG) \$(PNMPROG) \$(MATPROG) \\
	          ${TO_DEV_NULL}

# Rules for plain XITE C source
#
c :          cincl clib cprog
cincl:       \$(CINCL)
cobj:        \$(OBJ)
cprog:       \$(PROG)
clib:	     \$(OBJ)"

if_test '"\$(?)"' '!=' '"_OBJ_"'
	ar_cmd "\$(XITE_LIB_DEST)${DIR_SEP}\$(XITE_LIB)" "\$(?${OBJ_LIB_EXT})"
	unix_only "  \$(CHMOD) a+r \$(XITE_LIB_DEST)${DIR_SEP}\$(XITE_LIB) ${TO_DEV_NULL}; \\"
	unix_only "  \$(RANLIB) \$(XITE_LIB_DEST)${DIR_SEP}\$(XITE_LIB); \\"
end_if

echo "
\$(OBJ):      \$(@:.o=.c)
	     \$(COMPILE_c_dso) \$(@:.o=.c)"

if [ "$XITE_HOSTTYPE" != "NT4" ]; then
	echo "\$(PROG):     \$(@:=.c)"
else
	echo "\$(PROG):     \$(@).c"
fi
echo "	     \$(LINK_c_dso)"

unix_only "-@\$(CHMOD) a+rx \$(XITE_BIN_DEST)${DIR_SEP}\$(@) ${TO_DEV_NULL}"

echo "
\$(CINCL):    \$(@:.i=.h)
#	     Install include files"

if_test '"\$(@:.i=.h)"' '!=' '"_CINCL_"'
	cmd_and_echo "\$(COPY) \$(@:.i=.h) \$(XITE_INC_DEST)${DIR_SEP}xite"
	unix_only "  \$(CHMOD) u+w \$(XITE_INC_DEST)${DIR_SEP}xite${DIR_SEP}\$(@:.i=.h) ${TO_DEV_NULL}; \\"
	unix_only "  \$(CHMOD) a+r \$(XITE_INC_DEST)${DIR_SEP}xite${DIR_SEP}\$(@:.i=.h) ${TO_DEV_NULL}; \\"
end_if

if [ "$XITE_HOSTTYPE" != "NT4" ]; then
	echo "
# Rules for C source using X11
#
x :          xlib xprog
xobj:        \$(XOBJ)
#xprog:       \$(XPROG)
xlib:        \$(XOBJ)
	     -@if test \"\$(?)\" != \"_XOBJ_\"; then \\"
             ar_cmd "\$(XITE_LIB_DEST)${DIR_SEP}\$(XITE_LIB_X)" "\$(?)"
	     unix_only "  \$(CHMOD) a+r \$(XITE_LIB_DEST)${DIR_SEP}\$(XITE_LIB_X) ${TO_DEV_NULL}; \\"
	     unix_only "  \$(RANLIB) \$(XITE_LIB_DEST)${DIR_SEP}\$(XITE_LIB_X); \\"
	echo "	fi
\$(XOBJ):     \$(@:.o=.c)
	     \$(COMPILE_x_dso) \$(@:.o=.c)"

	if [ "$XITE_HOSTTYPE" != "NT4" ]; then
		echo "\$(XPROG):    \$(@:=.c)"
	else
		echo "\$(XPROG):    \$(@).c"
	fi

	echo "	     \$(LINK_x_dso)
	     -@\$(RM) \$(XITE_BIN_DEST)${DIR_SEP}\$(@) ${TO_DEV_NULL}
	     -@\$(LINK) \$(XITE_BIN_DEST)${DIR_SEP}startProg \$(XITE_BIN_DEST)${DIR_SEP}\$(@) \\
	       ${TO_DEV_NULL}
	     -@chmod a+rx \$(XITE_BIN_DEST)${DIR_SEP}\$(@).bin \$(XITE_BIN_DEST)${DIR_SEP}\$(@) \\
	       ${TO_DEV_NULL}"
fi

echo "
# Rules for C source using TIFF
#
tiff:        tifflib tiffprog
tiffobj:     \$(TIFFOBJ)
tiffprog:    \$(TIFFPROG)
tifflib:     \$(TIFFOBJ)"

if_test '"\$(?)"' '!=' '"_TIFFOBJ_"'
	ar_cmd "\$(XITE_LIB_DEST)${DIR_SEP}\$(XITE_TIFF_LIB)" "\$(?${OBJ_LIB_EXT})"
	unix_only "  \$(CHMOD) a+r \$(XITE_LIB_DEST)${DIR_SEP}\$(XITE_TIFF_LIB) ${TO_DEV_NULL}; \\"
	unix_only "  \$(RANLIB) \$(XITE_LIB_DEST)${DIR_SEP}\$(XITE_TIFF_LIB); \\"
end_if

echo "
\$(TIFFOBJ):  \$(@:.o=.c)
	     \$(COMPILE_t_dso) \$(@:.o=.c)"

if [ "$XITE_HOSTTYPE" != "NT4" ]; then
	echo "\$(TIFFPROG): \$(@:=.c)"
else
	echo "\$(TIFFPROG): \$(@).c"
fi

echo "	     \$(LINK_t_dso)"

unix_only "-@\$(CHMOD) a+rx \$(XITE_BIN_DEST)${DIR_SEP}\$(@) ${TO_DEV_NULL}"

echo "
# Rules for C source using pnm
#
pnm:         pnmlib pnmprog
pnmobj:      \$(PNMOBJ)
pnmprog:     \$(PNMPROG)
pnmlib:      \$(PNMOBJ)"

if_test '"\$(?)"' '!=' '"_PNMOBJ_"'
	ar_cmd "\$(XITE_LIB_DEST)${DIR_SEP}\$(XITE_PNM_LIB)" "\$(?${OBJ_LIB_EXT})"
	unix_only "  \$(CHMOD) a+r \$(XITE_LIB_DEST)${DIR_SEP}\$(XITE_PNM_LIB) ${TO_DEV_NULL}; \\"
	unix_only "  \$(RANLIB) \$(XITE_LIB_DEST)${DIR_SEP}\$(XITE_PNM_LIB); \\"
end_if

echo "
\$(PNMOBJ):  \$(@:.o=.c)
	     \$(COMPILE_p_dso) \$(@:.o=.c)"

if [ "$XITE_HOSTTYPE" != "NT4" ]; then
	echo "\$(PNMPROG):  \$(@:=.c)"
else
	echo "\$(PNMPROG):  \$(@).c"
fi

echo "	     \$(LINK_p_dso)"

unix_only "-@\$(CHMOD) a+rx \$(XITE_BIN_DEST)${DIR_SEP}\$(@) ${TO_DEV_NULL}"

echo "
pnmlib:

# Rules for C source using MATLAB
#
matlab:      matlib matprog matmex mathelp
matobj:      \$(MATOBJ)
matprog:     \$(MATPROG)
mathelp:     \$(MATHELP)
matmex:      \$(MATMEX)
matlib:      \$(MATOBJ)"

if_test '"\$(?)"' '!=' '"_MATOBJ_"'
	ar_cmd "\$(XITE_LIB_DEST)${DIR_SEP}\$(XITE_MATLAB_LIB)" "\$(?${OBJ_LIB_EXT})"
	unix_only "  \$(CHMOD) a+r \$(XITE_LIB_DEST)${DIR_SEP}\$(XITE_MATLAB_LIB) ${TO_DEV_NULL}; \\"
	unix_only "  \$(RANLIB) \$(XITE_LIB_DEST)${DIR_SEP}\$(XITE_MATLAB_LIB); \\"
end_if

echo "
\$(MATOBJ):   \$(@:.o=.c)
	     \$(COMPILE_m_dso) \$(@:.o=.c)"

if [ "$XITE_HOSTTYPE" != "NT4" ]; then
	echo "\$(MATPROG):  \$(@:=.c)"
else
	echo "\$(MATPROG):  \$(@).c"
fi

echo "	     \$(LINK_m_dso)"

unix_only "-@\$(CHMOD) a+rx \$(XITE_BIN_DEST)${DIR_SEP}\$(@) ${TO_DEV_NULL}"

if [ "$XITE_HOSTTYPE" != "NT4" ]; then
	echo "\$(MATMEX):   \$(@:=.c)"
else
	echo "\$(MATMEX):   \$(@).c"
fi

echo "#	     Create MATLAB mex-files.
	     \$(MEX)"

unix_only "-@\$(CHMOD) a+r \$(MATLAB_MEX_DEST)${DIR_SEP}\$(@).mex* ${TO_DEV_NULL}"

echo "\$(MATHELP):  \$(@:.m=.c)
#            Make MATLAB .m-file for MATLAB help.
	     \$(MFILE) \$(@:.m=.c) > \$(MATLAB_MEX_DEST)${DIR_SEP}\$(@)"

unix_only "-@\$(CHMOD) a+r \$(MATLAB_MEX_DEST)${DIR_SEP}\$(@) ${TO_DEV_NULL}"

if [ "$XITE_HOSTTYPE" != "NT4" ]; then
	echo "
# Rules for C source using fwf
#
fwf:         fwflib fwfprog
fwfobj:      \$(FWFOBJ)
fwfprog:     \$(FWFPROG)
fwflib:      \$(FWFOBJ)
	     -@if test \"\$(?)\" != \"_FWFOBJ_\"; then \\"
	       ar_cmd "\$(FWF_LIB_DIR)${DIR_SEP}\$(FWF_LIB)" "\$(?:.f=.o)"
	       unix_only "\$(CHMOD) a+r \$(FWF_LIB_DIR)${DIR_SEP}\$(FWF_LIB) ${TO_DEV_NULL}; \\"
	       unix_only "\$(RANLIB) \$(FWF_LIB_DIR)${DIR_SEP}\$(FWF_LIB); \\"
	     echo "	fi
fwfincl:     \$(FWFINCL)
\$(FWFOBJ):   \$(@:.o=.c)
	     \$(COMPILE_f_dso) \$(@:.o=.c)
\$(FWFINCL): \$(@:.i=.h)
#            Install include files
	     -@if test \"\$(@:.i=.h)\" != \"_FWFINCL_\"; then \\
	       echo \"\$(COPY) \$(@:.i=.h) \$(FWF_INC_DIR)${DIR_SEP}Xfwf\"; \\
	       \$(COPY) \$(@:.i=.h) \$(FWF_INC_DIR)${DIR_SEP}Xfwf; \\
	       \$(CHMOD) u+w \$(FWF_INC_DIR)${DIR_SEP}Xfwf${DIR_SEP}\$(@:.i=.h) ${TO_DEV_NULL}; \\
	       \$(CHMOD) a+r \$(FWF_INC_DIR)${DIR_SEP}Xfwf${DIR_SEP}\$(@:.i=.h) ${TO_DEV_NULL}; \\
	     fi

# Rules for C source using xpm
#
xpm:         xpmlib xpmprog
xpmobj:      \$(XPMOBJ)
xpmprog:     \$(XPMPROG)
xpmlib:      \$(XPMOBJ)
	     -@if test \"\$(?)\" != \"_XPMOBJ_\"; then \\"
	       ar_cmd "\$(XPM_LIB_DIR)${DIR_SEP}\$(XPM_LIB)" "\$(?:.f=.o)"
	       unix_only "\$(CHMOD) a+r \$(XPM_LIB_DIR)${DIR_SEP}\$(XPM_LIB) ${TO_DEV_NULL}; \\"
	       unix_only "\$(RANLIB) \$(XPM_LIB_DIR)${DIR_SEP}\$(XPM_LIB); \\"
	     echo "	fi
xpmincl:     \$(XPMINCL)
\$(XPMOBJ):   \$(@:.o=.c)
	     \$(COMPILE_f_dso) \$(@:.o=.c)
\$(XPMINCL): \$(@:.i=.h)
#            Install include files
	     -@if test \"\$(@:.i=.h)\" != \"_XPMINCL_\"; then \\
	       echo \"\$(COPY) \$(@:.i=.h) \$(XPM_INC_DIR)${DIR_SEP}xpm\"; \\
	       \$(COPY) \$(@:.i=.h) \$(XPM_INC_DIR)${DIR_SEP}xpm; \\
	       \$(CHMOD) u+w \$(XPM_INC_DIR)${DIR_SEP}xpm${DIR_SEP}\$(@:.i=.h) ${TO_DEV_NULL}; \\
	       \$(CHMOD) a+r \$(XPM_INC_DIR)${DIR_SEP}xpm${DIR_SEP}\$(@:.i=.h) ${TO_DEV_NULL}; \\
	     fi

\$(MANP):     \$(@:.m=.c)
#	     Make manual-page descriptions
	     -@if test \"\$(@)\" != \"_MANP_\"; then \\
	       echo \$(MANDOC) \\
	       \`grep \"^#\{0,1\}\/\*[PFD]:\" \$(@:.m=.c) |\\
	       sed 's/^#\{0,1\}../-e /' |\\
	       sed 's/.[ 	]*\$\$//' |\\
	       sed 's/=.*//' \` \$(@:.m=.c) \$(XITE_MAN_DEST)/ ; \\
	       \$(MANDOC) \`grep \"^#\{0,1\}\/\*[PFD]:\" \$(@:.m=.c) |\\
	       sed 's/^#\{0,1\}../-e /' |\\
	       sed 's/.[ 	]*\$\$//' |\\
	       sed 's/=.*//' \` \$(@:.m=.c) \$(XITE_MAN_DEST)/ ; \\
	       echo \$(HTMLDOC) \\
	       \`grep \"^#\{0,1\}\/\*[PFD]:\" \$(@:.m=.c) |\\
	       sed 's/^#\{0,1\}../-e /' |\\
	       sed 's/.[ 	]*\$\$//' | sed 's/=.*//' \` \$(@:.m=.c) \\
	       \$(XITE_DOC_DEST)/ ; \\
	       \$(HTMLDOC) \`grep \"^#\{0,1\}\/\*[PFD]:\" \$(@:.m=.c) |\\
	       sed 's/^#\{0,1\}../-e /' |\\
	       sed 's/.[ 	]*\$\$//' | sed 's/=.*//' \` \$(@:.m=.c) \\
	       \$(XITE_DOC_DEST)/ ; \\
	     fi
\$(MANP_SH):  \$(@:.m=.sh)
#	     Make manual-page descriptions
	     -@if test \"\$(@)\" != \"_MANP_SH_\"; then \\
	       echo \$(MANDOC) -s '*.sh' \\
	       \`grep \"^#\{0,1\}\/\*[PFD]:\" \$(@:.m=.sh) |\\
	       sed 's/^#\{0,1\}../-e /' |\\
	       sed 's/.[ 	]*\$\$//' |\\
	       sed 's/=.*//' \` \$(@:.m=.sh) \$(XITE_MAN_DEST)/ ; \\
	       \$(MANDOC) -s '*.sh' \`grep \"^#\{0,1\}\/\*[PFD]:\" \$(@:.m=.sh) |\\
	       sed 's/^#\{0,1\}../-e /' |\\
	       sed 's/.[ 	]*\$\$//' |\\
	       sed 's/=.*//' \` \$(@:.m=.sh) \$(XITE_MAN_DEST)/ ; \\
	       echo \$(HTMLDOC) -s '*.sh' \\
	       \`grep \"^#\{0,1\}\/\*[PFD]:\" \$(@:.m=.sh) |\\
	       sed 's/^#\{0,1\}../-e /' |\\
	       sed 's/.[ 	]*\$\$//' | sed 's/=.*//' \` \$(@:.m=.sh) \\
	       \$(XITE_DOC_DEST)/ ; \\
	       \$(HTMLDOC) -s '*.sh' \`grep \"^#\{0,1\}\/\*[PFD]:\" \$(@:.m=.sh) |\\
	       sed 's/^#\{0,1\}../-e /' |\\
	       sed 's/.[ 	]*\$\$//' | sed 's/=.*//' \` \$(@:.m=.sh) \\
	       \$(XITE_DOC_DEST)/ ; \\
	     fi

\$(ROFF3):    \$(@:.man=.3)
#            Copy troff-files to manual page section 3 directory
#            and html files to html reference manual directory
	     \$(COPY) \$(@:.man=.3) \$(XITE_MAN_DEST)${DIR_SEP}man3${DIR_SEP}\$(@:.man=.3)
	     \$(COPY) \$(@:.man=_3.html) \$(XITE_DOC_DEST)${DIR_SEP}\$(@:.man=_3.html)
"
fi

if [ "$XITE_HOSTTYPE" != "NT4" ]; then
	echo "\$(SCRIPTS):  \$(@:=.sh)"
else
	echo "\$(SCRIPTS):  \$(@).sh"
fi

echo "#	     Install shell scripts
	     \$(COPY) \$(@).sh \$(XITE_BIN_DEST)${DIR_SEP}\$(@)"

unix_only "-@\$(CHMOD) u+w \$(XITE_BIN_DEST)${DIR_SEP}\$(@) ${TO_DEV_NULL}"
unix_only "-@\$(CHMOD) a+rx \$(XITE_BIN_DEST)${DIR_SEP}\$(@) ${TO_DEV_NULL}"
