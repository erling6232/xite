#!/usr/bin/make -f
# Sample debian/rules that uses debhelper.
# GNU copyright 1997 to 1999 by Joey Hess.

PACKAGE=xite

# DebHelper control
export DH_ALWAYS_EXCLUDE=CVS:.cvsignore

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1


# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)

# FOR AUTOCONF 2.52 AND NEWER ONLY
CONFFLAGS =
ifeq ($(DEB_BUILD_GNU_TYPE), $(DEB_HOST_GNU_TYPE))
	CONFFLAGS += --build=$(DEB_HOST_GNU_TYPE)
else
	CONFFLAGS += --build=$(DEB_BUILD_GNU_TYPE) --host=$(DEB_HOST_GNU_TYPE)
endif

DEBUGFLAGS=-g
ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
        DEBUGFLAGS += -O0
else
	DEBUGFLAGS += -O3
endif

CFLAGS:=-Wall -pipe $(DEBUGFLAGS)
CXXFLAGS:=$(CFLAGS)

# shared library versions, option 1
version=3.4.5
major=3
# option 2, assuming the library is created as src/.libs/libfoo.so.2.0.5 or so
#version=`ls src/.libs/lib*.so.* | \
# awk '{if (match($$0,/[0-9]+\.[0-9]+\.[0-9]+$$/)) print substr($$0,RSTART)}'`
#major=`ls src/.libs/lib*.so.* | \
# awk '{if (match($$0,/\.so\.[0-9]+$$/)) print substr($$0,RSTART+4)}'`

configure:
	mkdir -p m4
	chmod +x build-aux/autogen.sh
	build-aux/autogen.sh

configure-stamp: configure
	dh_testdir
	# Add here commands to configure the package.
ifneq "$(wildcard /usr/share/misc/config.sub)" ""
	cp -f /usr/share/misc/config.sub build-aux/config.sub
endif
ifneq "$(wildcard /usr/share/misc/config.guess)" ""
	cp -f /usr/share/misc/config.guess build-aux/config.guess
endif
	rm -f config.cache

	./configure CFLAGS="$(CFLAGS)" CXXFLAGS="$(CXXFLAGS)" \
                $(CONFFLAGS) \
                --config-cache \
                --disable-dependency-tracking \
                --enable-rpm-install \
                --prefix=/usr \
                --mandir=\$${prefix}/share/man \
                --infodir=\$${prefix}/share/info \
                --datadir=\$${prefix}/share \
                --libexecdir=\$${prefix}/lib \
                --sysconfdir=/etc

	touch configure-stamp

build: build-stamp
build-stamp:  configure-stamp
	dh_testdir

	# Add here commands to compile the package.
	$(MAKE)

	touch build-stamp

# Clean everything up, including everything auto-generated
# at build time that needs not to be kept around in the Debian diff
clean: clean-patched

clean-patched: configure
	dh_testdir
	dh_testroot
	rm -f build-stamp configure-stamp

	# Add here commands to clean up after the build process.
	#-$(MAKE) clean
	[ ! -f Makefile ] || $(MAKE) distclean
	find -type d -name autom4te.cache -print0 | xargs -0 -r rm -rf \;
	-rm -f platform.h auto-include.h
	find -type d -name build -print0 | xargs -0 -r rm -rf \;
	find \( -name config.sub -o -name config.guess \) -print0 | xargs -0 -r rm -f \;

	dh_clean 

install: build
	dh_testdir
	dh_testroot
	dh_clean -k 
	dh_installdirs

	# Add here commands to install the package into debian/tmp
	$(MAKE) DESTDIR=$(CURDIR)/debian/tmp install

	dh_install

	mv debian/xite/usr/bin/xadd debian/xite/usr/bin/xadd.bin
	ln -s startProg debian/xite/usr/bin/xadd

	mv debian/xite/usr/bin/xfft debian/xite/usr/bin/xfft.bin
	ln -s startProg debian/xite/usr/bin/xfft

	mv debian/xite/usr/bin/xfilter debian/xite/usr/bin/xfilter.bin
	ln -s startProg debian/xite/usr/bin/xfilter

	mv debian/xite/usr/bin/xhistogram debian/xite/usr/bin/xhistogram.bin
	ln -s startProg debian/xite/usr/bin/xhistogram

	mv debian/xite/usr/bin/ximage_example debian/xite/usr/bin/ximage_example.bin
	ln -s startProg debian/xite/usr/bin/ximage_example

	mv debian/xite/usr/bin/xmovie debian/xite/usr/bin/xmovie.bin
	ln -s startProg debian/xite/usr/bin/xmovie

	mv debian/xite/usr/bin/xpyramid debian/xite/usr/bin/xpyramid.bin
	ln -s startProg debian/xite/usr/bin/xpyramid

	mv debian/xite/usr/bin/xregion debian/xite/usr/bin/xregion.bin
	ln -s startProg debian/xite/usr/bin/xregion

	mv debian/xite/usr/bin/xshow debian/xite/usr/bin/xshow.bin
	ln -s startProg debian/xite/usr/bin/xshow

	mv debian/xite/usr/bin/xwarp debian/xite/usr/bin/xwarp.bin
	ln -s startProg debian/xite/usr/bin/xwarp

	# Install xite-doc documentation
	mkdir -p debian/xite-doc/usr/share/doc/xite-doc
	gzip -c doc/WHAT_IS_XITE > debian/xite-doc/usr/share/doc/xite-doc/WHAT_IS_XITE.txt.gz
	cp doc/WHAT_IS_XITE.html debian/xite-doc/usr/share/doc/xite-doc/WHAT_IS_XITE.html
	gzip -c doc/UsersManual.ps > debian/xite-doc/usr/share/doc/xite-doc/UsersManual.ps.gz
	gzip -c doc/UsersManual.pdf > debian/xite-doc/usr/share/doc/xite-doc/UsersManual.pdf.gz
	gzip -c doc/ProgrammersManual.ps > debian/xite-doc/usr/share/doc/xite-doc/ProgrammersManual.ps.gz
	cp -r doc/ReferenceManual debian/xite-doc/usr/share/doc/xite-doc/

# Build architecture-independent files here.
binary-indep: build install
	dh_testdir -i
	dh_testroot
#	dh_installdebconf -i
	dh_installdocs -i
#	dh_installexamples -i
#	dh_installmenu -i
#	dh_installlogrotate -i
#	dh_installemacsen -i
#	dh_installpam -i
#	dh_installmime -i
#	dh_installinit -i
#	dh_installcron -i
#	dh_installman -i
#	dh_installinfo -i
#	dh_installchangelogs -i
	dh_link -i
	dh_strip -i
	dh_compress -i
	dh_fixperms -i
#	dh_perl -i
#	dh_python -i
#	dh_makeshlibs -i
	dh_installdeb -i
	dh_shlibdeps -i
	dh_gencontrol -i
	dh_md5sums -i
	dh_builddeb -i

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir -a
	dh_testroot
#	dh_installdebconf -a
	dh_installdocs -a
	dh_installexamples -a
	dh_installmenu -a
	dh_desktop -a
#	dh_installlogrotate -a
#	dh_installemacsen -a
#	dh_installpam -a
#	dh_installmime -a
#	dh_installinit -phplip -- defaults 19
#	dh_installcron -a
	dh_installman -a
#	dh_installinfo -a
	dh_installchangelogs -a
#	dh_python -a
#	dh_perl -a
	dh_link -a
	dh_strip -a
	dh_compress -a
	dh_fixperms -a
	dh_makeshlibs -a
	dh_installdeb -a
	dh_shlibdeps -a
	dh_gencontrol -a
	dh_md5sums -a
	dh_builddeb -a

binary: binary-indep binary-arch
.PHONY: build clean clean-patched binary-indep binary-arch binary install
